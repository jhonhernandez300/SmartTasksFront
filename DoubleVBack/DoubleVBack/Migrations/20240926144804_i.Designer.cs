// <auto-generated />
using System;
using DoubleV;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DoubleV.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240926144804_i")]
    partial class i
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DoubleV.Modelos.Rol", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RolId");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            RolId = 1,
                            Nombre = "Administrador"
                        },
                        new
                        {
                            RolId = 2,
                            Nombre = "Supervisor"
                        },
                        new
                        {
                            RolId = 3,
                            Nombre = "Empleado"
                        });
                });

            modelBuilder.Entity("DoubleV.Modelos.Tarea", b =>
                {
                    b.Property<int>("TareaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TareaId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("TareaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Tareas", (string)null);

                    b.HasData(
                        new
                        {
                            TareaId = 1,
                            Descripcion = "Vender",
                            Estado = "En Proceso",
                            UsuarioId = 1
                        },
                        new
                        {
                            TareaId = 2,
                            Descripcion = "Reparar",
                            Estado = "Completada",
                            UsuarioId = 2
                        });
                });

            modelBuilder.Entity("DoubleV.Modelos.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RolId")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId");

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios", (string)null);

                    b.HasData(
                        new
                        {
                            UsuarioId = 1,
                            Email = "james@gmail.com",
                            Nombre = "James",
                            Password = "James0101*",
                            RolId = 1
                        },
                        new
                        {
                            UsuarioId = 2,
                            Email = "radamel@gmail.com",
                            Nombre = "Radamel",
                            Password = "Radamel0101*",
                            RolId = 2
                        },
                        new
                        {
                            UsuarioId = 3,
                            Email = "carlos@gmail.com",
                            Nombre = "Carlos",
                            Password = "Carlos0101*",
                            RolId = 1
                        },
                        new
                        {
                            UsuarioId = 4,
                            Email = "maria@gmail.com",
                            Nombre = "Maria",
                            Password = "Maria0101*",
                            RolId = 2
                        },
                        new
                        {
                            UsuarioId = 5,
                            Email = "luis@gmail.com",
                            Nombre = "Luis",
                            Password = "Luis0101*",
                            RolId = 1
                        },
                        new
                        {
                            UsuarioId = 6,
                            Email = "laura@gmail.com",
                            Nombre = "Laura",
                            Password = "Laura0101*",
                            RolId = 2
                        },
                        new
                        {
                            UsuarioId = 7,
                            Email = "andres@gmail.com",
                            Nombre = "Andres",
                            Password = "Andres0101*",
                            RolId = 1
                        },
                        new
                        {
                            UsuarioId = 8,
                            Email = "daniela@gmail.com",
                            Nombre = "Daniela",
                            Password = "Daniela0101*",
                            RolId = 2
                        },
                        new
                        {
                            UsuarioId = 9,
                            Email = "juan@gmail.com",
                            Nombre = "Juan",
                            Password = "Juan0101*",
                            RolId = 1
                        },
                        new
                        {
                            UsuarioId = 10,
                            Email = "camila@gmail.com",
                            Nombre = "Camila",
                            Password = "Camila0101*",
                            RolId = 2
                        },
                        new
                        {
                            UsuarioId = 11,
                            Email = "miguel@gmail.com",
                            Nombre = "Miguel",
                            Password = "Miguel0101*",
                            RolId = 1
                        },
                        new
                        {
                            UsuarioId = 12,
                            Email = "sofia@gmail.com",
                            Nombre = "Sofia",
                            Password = "Sofia0101*",
                            RolId = 2
                        });
                });

            modelBuilder.Entity("DoubleV.Modelos.Tarea", b =>
                {
                    b.HasOne("DoubleV.Modelos.Usuario", "Usuario")
                        .WithMany("Tareas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DoubleV.Modelos.Usuario", b =>
                {
                    b.HasOne("DoubleV.Modelos.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("DoubleV.Modelos.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("DoubleV.Modelos.Usuario", b =>
                {
                    b.Navigation("Tareas");
                });
#pragma warning restore 612, 618
        }
    }
}
